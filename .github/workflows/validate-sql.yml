name: Validate SQL Queries

on:
  push:
    branches: [ "**" ]

jobs:
  validate-sql:
    runs-on: ubuntu-latest
    env:
      API_URL: "https://pg-advisor.itatmisis.ru/api/validate-query"
      DB_NAME: "demo"
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install requests
        sudo apt-get install -y jq
        
    - name: Validate SQL files
      run: |
        HAS_WARNINGS=false
        
        find . -name '*.sql' | while read -r sqlfile; do
          echo "Validating $sqlfile"
          
          sql_content=$(cat "$sqlfile" | jq -Rs . | sed 's/^"//;s/"$//')
          json_payload="{\"query\": \"$sql_content\", \"dbname\": \"$DB_NAME\"}"
          
          response=$(curl -s -X POST "$API_URL" \
            -H "Content-Type: application/json" \
            -d "$json_payload")
          
          overall_valid=$(echo "$response" | jq -r '.overall_valid')
          query_rules=$(echo "$response" | jq -r '.query_rules | length')
          
          if [ "$overall_valid" = "true" ]; then
            if [ "$query_rules" -gt 0 ]; then
              echo "::warning file=$sqlfile::Query has $query_rules optimization suggestions"
              echo "üü° Validation passed with warnings for $sqlfile"
              HAS_WARNINGS=true
            else
              echo "‚úÖ Validation passed for $sqlfile"
            fi
          else
            echo "‚ùå Validation failed for $sqlfile"
            echo "$response" | jq .
            exit 1
          fi
        done
        
        if [ "$HAS_WARNINGS" = "true" ]; then
          echo "::warning::Some queries have optimization suggestions"
          exit 1
        fi
